-- ================================================================================
--   postgres SQL DDL Script File
-- ================================================================================


-- ===============================================================================
-- 
--   Generated by:      tedia2sql -- v1.2.12
--                      See http://tedia2sql.tigris.org/AUTHORS.html for tedia2sql author information
-- 
--   Target Database:   postgres
--   Generated at:      Wed Nov 19 17:50:41 2008
--   Input Files:       schema.dia
-- 
-- ================================================================================



-- Generated SQL Constraints Drop statements
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Wed Nov 19 17:50:39 2008
--     Input Files:       schema.dia



-- Generated Permissions Drops
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Wed Nov 19 17:50:39 2008
--     Input Files:       schema.dia



-- Special statements for postgres:pre databases
drop domain netstatus cascade;
create domain netstatus text not null check(
value = 'trusted' or
value = 'untrusted' or
value = 'dynamic' or
value = 'remote' or
value = 'disabled');

drop domain netdomain cascade;
create domain netdomain text not null check(
value = 'intranet' or
value = 'ilab' or
value = 'wan' or
value = 'dmz');

drop domain vlan cascade;
create domain vlan integer not null check(
check_vlan(value) is not null);

-- Special statements for postgres:pre databases
-- custom types (domains)
drop domain usage cascade;
create domain usage text not null check(
value = 'instructional' or
value = 'research' or
value = 'other');

drop domain equipstatus cascade;
create domain equipstatus text not null check(
value = 'deployed' or
value = 'spare' or
value = 'surplus');

-- Special statements for postgres:pre databases
drop sequence uid_seq;
create sequence uid_seq;
drop sequence gid_seq;
create sequence gid_seq;

-- Special statements for postgres:pre databases
-- function declarations
drop function num_ports(text) cascade;
create function num_ports(text) returns integer as 'select 0' language 'sql';

drop function check_vlan(integer) cascade;
create function check_vlan(integer) returns integer as 'select 0' language 'sql';


-- Generated SQL View Drop Statements
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Wed Nov 19 17:50:39 2008
--     Input Files:       schema.dia



-- Generated SQL Schema Drop statements
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Wed Nov 19 17:50:39 2008
--     Input Files:       schema.dia



-- Generated SQL Schema
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Wed Nov 19 17:50:39 2008
--     Input Files:       schema.dia


-- equipment_people
-- Association between equipment and people
create table equipment_people (
  equipment_id              serial not null,
  equip_user                serial not null,
  constraint pk_equipment_people primary key (equipment_id,equip_user)
) ;

-- user_groups_user_accounts
-- Association between user_groups and user_accounts
create table user_groups_user_accounts (
  user_groups_id            serial not null,
  user_accounts_id          serial not null,
  constraint pk_user_groups_user_accounts primary key (user_groups_id,user_accounts_id)
) ;

-- comp_classes_computers
-- Association between comp_classes and computers
create table comp_classes_computers (
  comp_classes_id           serial not null,
  computers_id              serial not null,
  constraint pk_comp_classes_computers primary key (comp_classes_id,computers_id)
) ;

-- equipment
create table equipment (
  id                        serial not null,
  parent_equip_id           integer,
  cs_id                     integer unique default nextval ('cs_id_seq'),
  equip_name                text unique,
  descr                     text not null,
  install_date              date,
  po_num                    text,
  owner                     text,
  contact                   text,
  usage                     usage,
  building                  text,
  floor                     text,
  room                      text,
  comments                  text,
  serial_num                text,
  brown_inv_num             text,
  equip_status              equipstatus not null,
  surplus_equipment_id      serial not null,
  net_hosts_id              serial not null,
  net_switches_id           serial not null,
  computers_id              serial not null,
  constraint pk_equipment primary key (id)
) ;

-- net_hosts
create table net_hosts (
  id                        serial not null,
  dns_name                  text not null,
  domain                    netdomain not null,
  ipaddr                    inet,
  ethernet                  macaddr,
  ssh_hostkey               text,
  status                    netstatus not null,
  comments                  text,
  netboot                   text,
  monitored                 boolean not null,
  last_changed              timestamp not null default now(),
  net_aliases_id            serial not null,
  net_ports_id              serial null,
  net_services_id           serial not null,
  constraint pk_net_hosts primary key (id),
  unique (dns_name, domain),
  check (ethernet is not null or ipaddr is not null),
  check (ipaddr is null or masklen(ipaddr) = 32)
) ;

-- net_switches
create table net_switches (
  id                        serial not null,
  type                      text not null,	-- type of switch
  port_prefix               text not null,
  connection                text not null default 'ssh',
  username                  text not null,
  num_ports                 integer not null,
  pass                      text not null,
  net_ports_id              serial not null,
  constraint pk_net_switches primary key (id)
) ;

-- purchase_orders
create table purchase_orders (
  po_num                    numeric unique,
  req_num                   numeric unique,
  date                      date,
  for_by                    text,
  vendor                    text,
  product                   text,
  account1                  text,
  account2                  text,
  account3                  text,
  account4                  text,
  cost1                     numeric,
  cost2                     numeric,
  cost3                     numeric,
  cost4                     numeric,
  comments                  text,
  equipment_id              serial not null
) ;

-- surplus_equipment
create table surplus_equipment (
  id                        serial not null,
  surplus_date              date,
  sale_date                 date,
  buyer                     text,
  constraint pk_surplus_equipment primary key (id),
  check (surplus_date is not null or sale_date is not null)
) ;

-- net_aliases
create table net_aliases (
  id                        serial not null,
  alias                     text not null,
  comments                  text,
  status                    netstatus not null,
  last_changed              timestamp not null default now(),
  constraint pk_net_aliases primary key (id)
) ;

-- log_dhcp
create table log_dhcp (
  ethernet                  macaddr,
  ipaddr                    inet not null,
  date                      date not null
) ;

-- log_macaddr
create table log_macaddr (
  switch_name               text,
  port                      integer,
  macaddr                   text,
  date                      date not null
) ;

-- log_db_export
create table log_db_export (
  script_name               text,
  last_run                  timestamp default now()
) ;

-- user_accounts
create table user_accounts (
  id                        serial not null,
  uid                       integer unique not null default nextval('uid_seq'),
  login                     text unique not null,
  gid                       integer default nextval('gid_seq'),
  shell                     text not null,
  home_dir                  text not null,
  created                   date not null,
  expiration                date,
  comments                  text,
  last_changed              timestamp not null default now(),
  sponsor                   serial null,
  mail_aliases_id           serial not null,
  constraint pk_user_accounts primary key (id)
) ;

-- mail_aliases
create table mail_aliases (
  id                        serial not null,
  alias                     text not null,
  target                    text not null,
  type                      text not null,
  constraint pk_mail_aliases primary key (id)
) ;

-- user_groups
create table user_groups (
  id                        serial not null,
  gid                       integer unique not null,
  group_name                text unique not null default nextval('gid_seq'),
  created                   date,
  comments                  text,
  space                     integer not null,
  constraint pk_user_groups primary key (id)
) ;

-- people
create table people (
  id                        serial not null,
  full_name                 text,
  common_name               text,
  family_name               text,
  alternate_email           text,
  auth_id                   text,
  brown_card_id             text unique,
  banner_id                 text unique,
  gender                    text,
  ethnicity                 text,
  citizenship               text,
  office                    text,
  office_phone              text,
  home_phone                text,
  cell_phone                text,
  comments                  text,
  user_accounts_id          serial not null,
  faculty_id                serial not null,
  staff_id                  serial not null,
  ugrads_id                 serial not null,
  enrollment_id             serial not null,
  grads_id                  serial not null,
  constraint pk_people primary key (id)
) ;

-- faculty
create table faculty (
  id                        serial not null,
  comments                  text,
  constraint pk_faculty primary key (id)
) ;

-- staff
create table staff (
  id                        serial not null,
  comments                  text,
  constraint pk_staff primary key (id)
) ;

-- ugrads
create table ugrads (
  id                        serial not null,
  comments                  text,
  constraint pk_ugrads primary key (id)
) ;

-- fs_exports
create table fs_exports (
  id                        serial not null,
  server                    text,
  path                      text,
  fs_class                  text not null,
  quota                     integer,
  flags                     text,
  backup_policy             text,
  constraint pk_fs_exports primary key (id)
) ;

-- fs_classes
create table fs_classes (
  fs_class                  text,
  perms                     text,
  fs_exports_id             serial not null
) ;

-- fs_automounts
create table fs_automounts (
  client_path               text,
  server                    text,
  server_path               text,
  flags                     text
) ;

-- grads
create table grads (
  id                        serial not null,
  program                   text,
  year_entered              text,
  advisor                   text,
  thesis_advisor1           text,
  thesis_advisor2           text,
  thesis_advisor3           text,
  prog_comp1                text,
  prog_comp2                text,
  res_prop                  text,
  res_prop_date             date,
  res_pres                  text,
  res_pres_date             date,
  entered_candidacy         date,
  thesis_prop_date          date,
  thesis_def_date           date,
  thesis_submit_date        date,
  comments                  text,
  grad_funding_id           serial not null,
  grad_standing_id          serial not null,
  grad_reports_id           serial not null,
  constraint pk_grads primary key (id)
) ;

-- courses
create table courses (
  course                    text,
  year                      text,
  name                      text,
  description               text,
  instructor                text,
  level_100                 text default 'N',
  level_200                 text default 'N',
  phd_area1                 text,
  phd_area2                 text,
  ugrad_area                text,
  scm_theory                text default 'N',
  scm_practice              text default 'N',
  scm_prog                  text default 'N',
  scm_research              text default 'N',
  comments                  text,
  enrollment_id             serial not null
) ;

-- enrollment
create table enrollment (
  id                        serial not null,
  course                    text,
  year                      text,
  grade                     text,
  level_100                 boolean,
  level_200                 boolean,
  phd_seq                   text,
  phd_area                  text,
  ugrad_area                text,
  scm_theory                boolean,
  scm_practice              boolean,
  scm_prog                  boolean,
  scm_research              boolean,
  comments                  text,
  constraint pk_enrollment primary key (id)
) ;

-- grad_funding
create table grad_funding (
  id                        serial not null,
  year                      text,
  semester                  text,
  source                    text,
  comments                  text,
  constraint pk_grad_funding primary key (id)
) ;

-- grad_reports
create table grad_reports (
  id                        serial not null,
  name                      text,
  description               text,
  fields                    text,
  query                     text,
  constraint pk_grad_reports primary key (id)
) ;

-- grad_standing
create table grad_standing (
  id                        serial not null,
  date                      date,
  standing                  text,
  comments                  text,
  constraint pk_grad_standing primary key (id)
) ;

-- net_services
create table net_services (
  id                        serial not null,
  service                   text not null,
  comments                  text,
  constraint pk_net_services primary key (id)
) ;

-- net_ports
create table net_ports (
  id                        serial not null,
  port_num                  integer not null,
  wall_plate                text unique not null,
  vlan                      vlan not null,
  last_changed              timestamp not null default now(),
  constraint pk_net_ports primary key (id),
  check (port_num >= 0 and port_num <= num_ports(switch_name))
  -- check that port is unique in switch
) ;

-- computers
create table computers (
  id                        serial not null,
  machine_name              text unique not null,
  system_model              text,
  num_cpus                  integer,
  cpu_type                  text,
  cpu_speed                 text,
  memory                    text,
  hard_drives               text,
  total_disk                text,
  other_drives              text,
  network_cards             text,
  video_cards               text,
  info_time                 timestamp,
  boot_time                 timestamp,
  comments                  text,
  os_id                     serial not null,
  constraint pk_computers primary key (id)
) ;

-- os
create table os (
  id                        serial not null,
  os_name                   text,
  version                   text,
  dist                      text,
  constraint pk_os primary key (id)
) ;

-- comp_classes
create table comp_classes (
  id                        serial not null,
  class                     text unique not null,
  comments                  text,
  constraint pk_comp_classes primary key (id)
) ;

-- net_vlans
create table net_vlans (
  vlan                      integer unique not null,
  network                   cidr not null,
  comments                  text
) ;


comment on column net_switches.type is 'type of switch';































-- Generated SQL Views
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Wed Nov 19 17:50:39 2008
--     Input Files:       schema.dia



-- Special statements for postgres:post databases
-- function definitions
create or replace function num_ports(text)
  returns integer
  as 'select num_ports from switch where switch_name = $1'
  language 'sql';

create or replace function check_vlan(integer)
  returns integer
  as 'select vlan from vlans where vlan = $1'
  language 'sql';

-- grants
grant update on person_id_seq to group graddb;


-- Generated Permissions
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Wed Nov 19 17:50:39 2008
--     Input Files:       schema.dia

grant select on user_accounts to group graddb ;
grant all on people to group graddb ;
grant all on grads to group graddb ;
grant all on courses to group graddb ;
grant all on enrollment to group graddb ;
grant all on grad_funding to group graddb ;
grant select on grad_reports to group graddb ;
grant insert,update on grad_reports to group graddb_admin ;
grant all on grad_standing to group graddb ;


-- Generated SQL Insert statements
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Wed Nov 19 17:50:39 2008
--     Input Files:       schema.dia



-- Generated SQL Constraints
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Wed Nov 19 17:50:39 2008
--     Input Files:       schema.dia

create index idx_people_family_name on people  (family_name) ;
alter table net_switches add constraint net_switches_fk_net_ports_id
  foreign key (net_ports_id)
  references net_ports (id) on update cascade on delete cascade ;
alter table equipment add constraint equipment_fk_surplus_equipment_id
  foreign key (surplus_equipment_id)
  references surplus_equipment (id) on update cascade on delete cascade ;
alter table purchase_orders add constraint purchase_orders_fk_equipment_id
  foreign key (equipment_id)
  references equipment (id) on update cascade on delete cascade ;
alter table net_hosts add constraint net_hosts_fk_net_aliases_id
  foreign key (net_aliases_id)
  references net_aliases (id) on update cascade on delete cascade ;
alter table user_accounts add constraint user_accounts_fk_sponsor
  foreign key (sponsor)
  references people (id) on delete set NULL ;
alter table equipment add constraint equipment_fk_net_hosts_id
  foreign key (net_hosts_id)
  references net_hosts (id) on update cascade on delete cascade ;
alter table equipment_people add constraint equipment_people_fk_equipment_id
  foreign key (equipment_id)
  references equipment (id) on delete cascade ;
alter table equipment_people add constraint equipment_people_fk_people_id
  foreign key (equip_user)
  references people (id) on delete cascade ;
alter table people add constraint people_fk_user_accounts_id
  foreign key (user_accounts_id)
  references user_accounts (id) on update cascade on delete cascade ;
alter table equipment add constraint equipment_fk_net_switches_id
  foreign key (net_switches_id)
  references net_switches (id) on update cascade on delete cascade ;
alter table net_hosts add constraint net_hosts_fk_net_ports_id
  foreign key (net_ports_id)
  references net_ports (id) on delete set NULL ;
alter table people add constraint people_fk_faculty_id
  foreign key (faculty_id)
  references faculty (id) on update cascade on delete cascade ;
alter table people add constraint people_fk_staff_id
  foreign key (staff_id)
  references staff (id) on update cascade on delete cascade ;
alter table people add constraint people_fk_ugrads_id
  foreign key (ugrads_id)
  references ugrads (id) on update cascade on delete cascade ;
alter table fs_classes add constraint fs_classes_fk_fs_exports_id
  foreign key (fs_exports_id)
  references fs_exports (id) on update cascade on delete cascade ;
alter table equipment add constraint equipment_fk_parent_equip_id
  foreign key (parent_equip_id)
  references equipment (id) on update cascade on delete cascade ;
alter table grads add constraint grads_fk_grad_funding_id
  foreign key (grad_funding_id)
  references grad_funding (id) on update cascade on delete cascade ;
alter table people add constraint people_fk_enrollment_id
  foreign key (enrollment_id)
  references enrollment (id) on update cascade on delete cascade ;
alter table grads add constraint grads_fk_grad_standing_id
  foreign key (grad_standing_id)
  references grad_standing (id) on update cascade on delete cascade ;
alter table net_hosts add constraint net_hosts_fk_net_services_id
  foreign key (net_services_id)
  references net_services (id) on update cascade on delete cascade ;
alter table user_groups_user_accounts add constraint user_groups_user_accounts_fk_user_groups_id
  foreign key (user_groups_id)
  references user_groups (id) on delete cascade ;
alter table user_groups_user_accounts add constraint user_groups_user_accounts_fk_user_accounts_id
  foreign key (user_accounts_id)
  references user_accounts (id) on delete cascade ;
alter table grads add constraint grads_fk_grad_reports_id
  foreign key (grad_reports_id)
  references grad_reports (id) on update cascade on delete cascade ;
alter table courses add constraint courses_fk_enrollment_id
  foreign key (enrollment_id)
  references enrollment (id) on update cascade on delete cascade ;
alter table user_accounts add constraint user_accounts_fk_mail_aliases_id
  foreign key (mail_aliases_id)
  references mail_aliases (id) on update cascade on delete cascade ;
alter table people add constraint people_fk_grads_id
  foreign key (grads_id)
  references grads (id) on update cascade on delete cascade ;
alter table computers add constraint computers_fk_os_id
  foreign key (os_id)
  references os (id) on update cascade on delete cascade ;
alter table comp_classes_computers add constraint comp_classes_computers_fk_comp_classes_id
  foreign key (comp_classes_id)
  references comp_classes (id) on delete cascade ;
alter table comp_classes_computers add constraint comp_classes_computers_fk_computers_id
  foreign key (computers_id)
  references computers (id) on delete cascade ;
alter table equipment add constraint equipment_fk_computers_id
  foreign key (computers_id)
  references computers (id) on update cascade on delete cascade ;

