#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;

use FindBin qw($RealBin);
use lib "$RealBin/../lib";
use BrownCS::udb::Schema;
use BrownCS::udb::Util qw(:all);
use BrownCS::udb::Console qw(:all);
use BrownCS::udb::Net qw(:all);

# Print a simple help message.
sub usage {
  my ($exit_status) = @_;
  pod2usage({ -exitval => $exit_status, -verbose => 1});
}

my $help = 0;

GetOptions (
  'help|h|?' => \$help, 
) or usage(1);
usage(0) if $help;

if (@ARGV != 1) {
  usage(2);
}

my $udb = BrownCS::udb::Schema->connect;
my $uc = new BrownCS::udb::Console(udb => $udb);

my $name;
if (@ARGV == 1) {
  $name = shift @ARGV;

  if (! device_exists($udb, $name)) {
    die "No record for device named \"$name\".\n";
  }
}

my $rs;
eval {
  $rs = $udb->txn_do(sub {
    my $addr = $uc->choose_addr($name);
    $addr->delete;
  });
};
if ($@) {
  die <<EOF;
Operation failed. Details:
  $@
EOF
}

__END__

=head1 NAME

udb-del-addr - Delete an existing IP address from a device

=head1 SYNOPSIS

udb-del-interface <device>

=head1 DESCRIPTION

Allows you to delete an existing IP address from a device's
network interface.  If the device has multiple IP addresses,
you will be prompted to choose which address to remove.

=head1 OPTIONS

=over

=item B<-h>, B<--help>

Print a help message and exit.

=back

=head1 AUTHORS

Mark Dieterich.

=head1 SEE ALSO

B<udb>

=cut

