#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;

use FindBin qw($RealBin);
use lib "$RealBin/../lib";
use BrownCS::udb::Schema;
use BrownCS::udb::Util qw(:all);
use BrownCS::udb::Console qw(:all);

# Print a simple help message.
sub usage {
  my ($exit_status) = @_;
  pod2usage({ -exitval => $exit_status, -verbose => 1});
}

my $help = 0;
my $verbose = 0;
my $dryrun = 0;

GetOptions (
  'help|h|?' => \$help, 
  'v|verbose' => \$verbose,
  'n|dryrun' => \$dryrun,
) or usage(1);
usage(0) if $help;

my $udb = BrownCS::udb::Schema->connect;
my $uc = new BrownCS::udb::Console(udb => $udb);

if (not $dryrun) {
  if (not BrownCS::udb::Util::okay_tstaff) {
    print "Insufficient privileges - check your warnings.\n";
    exit;
  }
}

if ((@ARGV < 1) or (@ARGV > 2)) {
  usage(2);
}

my $old_name = shift @ARGV;
my $new_name = shift @ARGV;

my $device = $udb->resultset('Devices')->find($old_name);
die "No record for device $old_name.\n" if not $device;

if ($device->protected) {
  printf("The device %s is protected!\n", $device->device_name);
  print "Do not modify or delete this entry unless you know what you're doing.\n";
  if (! $uc->confirm("Are you sure (y/n)?")) {
    exit(1);
  }
}

if (not $new_name) {
  $new_name = $uc->get_device_name;
} elsif (not verify_hostname($udb)->($new_name)) {
  exit(1);
}

if (not $new_name) {
  exit(0);
}

if ($dryrun) {
  print "Dry run finished...\n";
  exit;
}

$device->device_name($new_name);
$device->update;

# find all authoritative DNS entries, delete, recreate

my $dns_entries = $udb->resultset('NetDnsEntries')->search(
  {
    'me.authoritative' => 1,
    'device.device_name' => $device->device_name,
  },
  {
    prefetch => {
      'net_address' => {
        'net_addresses_net_interfaces' => {
          'net_interface' => 'device',
        },
      },
    },
  });

while (my $dns_entry = $dns_entries->next) {
  $dns_entry->dns_name($new_name);
  $dns_entry->update;
}

__END__

=head1 NAME

udb-rename - Perform maintenance on an existing device record in UDB

=head1 SYNOPSIS

udb-rename <device> [<new-name>]

=head1 DESCRIPTION

Perform maintenance on an existing device record in UDB.

=head1 OPTIONS

=over

=item B<-h>, B<--help>

Print a help message and exit.

=item B<-n>, B<--dryrun>

Don't make any changes; just print what would be done.

=item B<-v>, B<--verbose>

Print lots of text about what is going on.

=back

=head1 AUTHORS

Aleks Bromfield.

=head1 SEE ALSO

B<udb>

=cut

