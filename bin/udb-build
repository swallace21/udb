#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use Data::Dumper;

use FindBin qw($RealBin);
use lib "$RealBin/../lib";
use BrownCS::udb::Schema;
use BrownCS::udb::Build;
use BrownCS::udb::Util qw(:all);

# Print a simple help message.
sub usage {
  my ($exit_status) = @_;
  pod2usage({ -exitval => $exit_status, -verbose => 1});
}

my $help = 0;
my $udb = BrownCS::udb::Schema->connect;
my $dryrun = 0;
my $verbose = 0;
my $tftp = 0;
my $netgroup = 0;
my $dhcp = 0;
my $nagios = 0;
my $wpkg = 0;
my $dns = 0;
my $finger = 0;
my $setall = 0;
my $skipchecks = 0;

BEGIN { $| = 1 }

GetOptions (
  'help|h|?' => \$help, 
  'n|dryrun' => \$dryrun,
  'v|verbose' => \$verbose,
  'tftp' => \$tftp,
  'netgroup' => \$netgroup,
  'dhcp' => \$dhcp,
  'nagios' => \$nagios,
  'wpkg' => \$wpkg,
  'dns' => \$dns,
  'finger' => \$finger,
  'a|all' => \$setall,
  's' => \$skipchecks,
) or usage(2);
usage(1) if $help;

if (@ARGV > 0) {
  usage(2);
}

my $ub = new BrownCS::udb::Build(udb => $udb, verbose => $verbose, dryrun => $dryrun);

my $all = $tftp + $netgroup + $dhcp + $nagios + $wpkg + $dns + $finger;

if(not $all) {
  $all = 1;
} else {
  $all = 0;
}

if($setall){
  $all = 1;
}

#Do I need Kerberos?
my $kerb = $netgroup + $all;
#Do I need root?
my $root = $tftp + $dhcp + $nagios + $wpkg + $dns + $finger + $all;

if (not $dryrun || not $skipchecks) {

  if (not BrownCS::udb::Util::okay_adminhost){
    exit;
  }

  if ($root && BrownCS::udb::Util::okay_root_silent && not BrownCS::udb::Util::okay_sudo){
    exit;
  }

  if ($kerb && not BrownCS::udb::Util::okay_kerberos){
    exit;
  }

  if(not BrownCS::udb::Util::okay_root_silent){
    #Renew sudo timestamp, getting password if necessary
    system("sudo -v :");
    exit;
  }
}

if ($dryrun){
  print "Dryrun - exiting...\n";
  exit;
}

  #build_netgroup requires Kerberos credentials. 
  #Everything else requires root. 
  #
  #By this point, you should be a regular user with Kerberos credentials
  #and an active sudo timestamp. 
  if ($netgroup){
    $ub->build_netgroup;
  }
  if ($tftp){
    $ub->build_tftpboot;
  }
  if ($dhcp){
    $ub->build_dhcp;
  }
  if ($nagios){
    $ub->build_nagios;
  }
  if ($wpkg){
    $ub->build_wpkg_hosts;
  }
  if ($dns){
    $ub->build_dns;
  }
  if ($finger){
    $ub->build_finger_data;
  }


__END__

=head1 NAME

build - build system databases/config files from udb

=head1 SYNOPSIS

build

=head1 DESCRIPTION

builds stuff

=head1 OPTIONS

=over

=item B<-h>, B<--help>

Print a help message and exit.

=item B<-n>, B<--dryrun>

Don't make any changes; just print what would be done. Files which would
normally be copied to servers are instead left in /tmp. 

=item B<-v>, B<--verbose>

Print lots of text about what is going on.

=back

=head1 AUTHORS

Aleks Bromfield.

=head1 SEE ALSO

B<udb>

=cut

