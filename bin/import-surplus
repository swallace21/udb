#!/usr/bin/perl -w

# $Id$

#
# To run:
#    index -f cat surplus '' | <this script>
#
use strict;
use Udb;
my($db) = new Udb;
$db->set_print(1);

my($hostname, $desc, $inv, $ug_serial, $serial, $ug_po, $po, $po_rem1,
   $po_rem2, $puch_date, $puch_rem1, $puch_rem2, $ug_instdate,  $install_date,
   $inst_rem1, $inst_rem2, $loc, $config, $conf_rem1, $conf_rem2,
   $type, $users, $surp_date, $buyer);
my($id, $first_line, $result);
$first_line = <>;

# Hostname
# Description
# Brown inv. #
# Upgrade serial #
# Serial #
# Upgrade PO #
# Purchase Order#
#  remarks
#  remarks
# Purchase date
#   remarks
#   remarks
# Upgrade install date
# Installation Date
#   remarks
#   remarks
# Location
# Configuration
#   remarks
#   remarks
# Type
# User(s)
# Date of surplus
# Buyer

while ( <> ) {
    ($hostname, $desc, $inv, $ug_serial, $serial, $ug_po, $po, $po_rem1,
     $po_rem2, $puch_date, $puch_rem1, $puch_rem2, $ug_instdate,
     $install_date, $inst_rem1, $inst_rem2, $loc, $config, $conf_rem1,
     $conf_rem2, $type, $users, $surp_date, $buyer) = split(/\t/);

    $hostname = &strip_dash($hostname);
    print "$hostname\n";
    $type = &strip_dash($type);
    $inv = &strip_dash($inv);
    $serial = &strip_dash($serial);
    &create_usage($type);
    &create_location($loc);

    &insert();

    &purchase_info();
    &users();
    &install();
    &config();
    &surplus();
}

$db->commit();
#$db->rollback();
$db->close();

sub surplus() {
    if ( $surp_date ) {
	$surp_date = &fix_date($surp_date);
    }
    $surp_date = $db->quote($surp_date);
    $buyer = &strip_dash($buyer);
    $buyer = $db->quote($buyer);
    if ( ($surp_date eq 'NULL') && ($buyer eq 'NULL') ) {
	return;
    }
    $db->do("INSERT INTO dispose ( id, surplus_date, buyer ) VALUES ( $id, $surp_date, $buyer )");
}

sub config() {
    my($comment) = $config . ' ' . $conf_rem1 . ' ' . $conf_rem2;
    $comment = &strip_dash($comment);
    $comment = $db->quote($comment);
    if ( $comment eq 'NULL') {
	return;
    }	
    $db->do("INSERT INTO config ( id, comment ) VALUES ( $id, $comment )");
}

sub install {
    my($comment) = '';

    if ( $install_date ) {
	$install_date = &fix_date($install_date);
    }
    $install_date = $db->quote($install_date);

    if ( $inst_rem1 ) {
	$comment = $inst_rem1;
    }
    if ( $inst_rem2 ) {
	$comment .= " $inst_rem2";
    }
    $comment = &strip_dash($comment);
    $comment = $db->quote($comment);

    if ( ($install_date eq 'NULL') && ($comment eq 'NULL') ) {
	return;
    }
    $db->do("INSERT INTO installation ( id, date, comment ) VALUES ( $id, $install_date, $comment )");
}

sub users {
    return unless ( $users );
    $users = &strip_dash($users);
    $users = $db->quote($users);
    if ( $users eq 'NULL' ) {
	return;
    }
    $db->do("INSERT INTO users ( id, users ) VALUES ( $id, $users )");
}

sub purchase_info {
    my($comment) = '';

    if ( $po_rem1 ) {
	$comment = $po_rem1;
    }
    if ( $po_rem2 ) {
	$comment .= " $po_rem2";
    }
    if ( $puch_rem1 ) {
	$comment .= " $puch_rem1";
    }
    if ( $puch_rem2 ) {
	$comment .= " $puch_rem2";
    }
    $po = &strip_dash($po);
    $po = $db->quote($po);
    $puch_date = &strip_dash($puch_date);
    $puch_date = &fix_date($puch_date);
    $puch_date = $db->quote($puch_date);
    $comment = &strip_dash($comment);
    $comment = $db->quote($comment);

    if ( ($po eq 'NULL') && ($puch_date eq 'NULL') && ($comment eq 'NULL') ) {
	return;
    }
    $db->do("INSERT INTO purchase ( id, po_num, date, comment ) VALUES ( $id, $po, $puch_date, $comment)");
}

sub insert {
    $id = $db->create_id();
    if ( !$id ) {
	die "Can't get id\n";
    }
    if ( !$loc ) {
	$loc = 'unknown';
    }
    $loc = $db->quote($loc);
    if ( !$desc ) {
	$desc = 'Unknown';
    }
    $desc = $db->quote($desc);
    if ( $serial eq 'no s/n' || $serial eq 'n/a' || $serial eq 'none' ) {
	$serial = '';
    }
    $serial = $db->quote($serial);
    $inv = &strip_dash($inv);
    if ( $inv eq 'NA'  || $inv eq 'unassigned') {
	$inv = '';
    }
    $inv = $db->quote($inv);
    $type = $db->quote($type);
    my($h) = $db->quote("index host: $hostname");

    $db->do("INSERT INTO equipment ( id, descr, lid, serial_num, inventory_num, usage, comment, active ) VALUES ($id, $desc, $loc, $serial, $inv, $type, $h, 'f')");
}

sub create_usage {
    my($usage) = shift;

    return if ( $usage eq '');
    my($result) = $db->select("SELECT * FROM usage WHERE usage = '$usage'");
    if ( !$result ) {
	die "error\n";
    }
    if ( $#{$result} == -1 ) {
	$db->do("INSERT INTO usage ( usage ) VALUES ( '$usage' )");
    }
}

sub create_location {
    my($loc) = shift;

    return if ( $loc eq '');
    $loc = $db->quote($loc);
    my($result) = $db->select("SELECT * FROM location WHERE lid = $loc");
    if ( !$result ) {
	die "error\n";
    }
    if ( $#{$result} == -1 ) {
	$db->do("INSERT INTO location ( lid ) VALUES ( $loc )");
    }
}

sub strip_dash {
    my($st) = shift;
    if ( $st =~ /^[-\s]+$/ ) {
	return '';
    }
    $st;
}

