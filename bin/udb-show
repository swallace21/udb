#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;

use FindBin qw($RealBin);
use lib "$RealBin/../lib";
use BrownCS::UDB;
use BrownCS::UDB::Util qw(:all);
use BrownCS::UDB::View qw(print_record);

# Print a simple help message.
sub usage {
  my ($exit_status) = @_;
  pod2usage({ -exitval => $exit_status, -verbose => 1});
}

my $help = 0;
my $verbose = 0;
my $dryrun = 0;
my $username = $ENV{'USER'};

GetOptions ('help|h|?' => \$help, 
            'v|verbose' => \$verbose,
            'n|dryrun' => \$dryrun,
            'u|username=s' => \$username) or usage(1);
usage(0) if $help;

my $udb = BrownCS::UDB->new;
$udb->start($username);

if (@ARGV != 2) {
  usage(2);
}

my $view = shift @ARGV;
my $name = shift @ARGV;

my %host = $udb->get_equip($name);

if (not %host) {
  print "No record for device $name.\n";
  exit(2);
}

print_record('hostname', '', \%host);
print_record($view, '', \%host);

END {
  if (defined $udb) {
    $udb->finish;
  }
}

__END__

=head1 NAME

udb-show - Print out information about a device

=head1 SYNOPSIS

udb-show [-u username] VIEW DEVICE

=head1 DESCRIPTION

udb-show queries the UDB database for information about a piece of
equipment, and prints it out to the console. It is designed to resemble
the old I<cdb profile> or I<index pc> commands.

=head1 OPTIONS

=over

=item B<-h>, B<--help>

Print a help message and exit.

=item B<-u>, B<--username>=user

Logs onto the database server as the specified username, instead of as
the current user.

=back

=head1 AUTHORS

Aleks Bromfield.

=head1 SEE ALSO

B<udb>

=cut

