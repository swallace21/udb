#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;

use FindBin qw($RealBin);
use lib "$RealBin/../lib";
use BrownCS::udb::Schema;
use BrownCS::udb::Util qw(:all);
use BrownCS::udb::Console qw(:all);

# Print a simple help message.
sub usage {
  my ($exit_status) = @_;
  pod2usage({ -exitval => $exit_status, -verbose => 1});
}

my $help = 0;
my $verbose = 0;
my $dryrun = 0;
my $username = $ENV{'USER'};

GetOptions ('help|h|?' => \$help, 
            'v|verbose' => \$verbose,
            'n|dryrun' => \$dryrun,
            'u|username=s' => \$username) or usage(1);
usage(0) if $help;

my $udb = BrownCS::udb::Schema->connect;


if ((@ARGV < 1) or (@ARGV > 2)) {
  usage(2);
}

my $name = shift @ARGV;
my $new_mac = shift @ARGV;

my $device = $udb->resultset('Devices')->find($name);
die "No record for device $name.\n" if not $device;

if ($device->protected) {
  printf("The device %s is protected!\n", $device->name);
  print "Do not modify or delete this entry unless you know what you're doing.\n";
  exit(1);
}

my $iface_set = $device->net_interfaces;

if ($iface_set->count < 1) {
  print "No networked device with this name exists.\n";
  exit(1);
} elsif ($iface_set->count > 1) {
  printf("The device %s has more than one network card.\n", $device->name);
  print "Do not modify or delete this entry unless you know what you're doing.\n";
  exit(1);
}

if (not $new_mac) {
  $new_mac = get_new(0, "MAC address", \&verify_mac);
} elsif (not verify_mac($new_mac)) {
  exit(1);
}

if (not $new_mac) {
  exit(0);
}

my $iface = $iface_set->single;
$iface->ethernet($new_mac);
$iface->update;

__END__

=head1 NAME

udb-modify - Perform maintenance on an existing device record in UDB

=head1 SYNOPSIS

udb-modify [-u username] <device>

=head1 DESCRIPTION

Perform maintenance on an existing device record in UDB.

=head1 OPTIONS

=over

=item B<-h>, B<--help>

Print a help message and exit.

=item B<-u>, B<--username>=user

Logs onto the database server as the specified username, instead of as
the current user.

=back

=head1 AUTHORS

Aleks Bromfield.

=head1 SEE ALSO

B<udb>

=cut

