#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;

use FindBin qw($RealBin);
use lib "$RealBin/../lib";
use BrownCS::UDB;
use BrownCS::UDB::Util qw(:all);

# Print a simple help message.
sub usage {
  my ($exit_status) = @_;
  pod2usage({ -exitval => $exit_status, -verbose => 1});
}

my $help = 0;
my $verbose = 0;
my $dryrun = 0;
my $username = $ENV{'USER'};

sub vprint {
  my ($msg) = @_;
  if ($verbose) {
    print $msg, "\n";
  }
}

GetOptions ('help|h|?' => \$help, 
            'v|verbose' => \$verbose,
            'n|dryrun' => \$dryrun,
            'u|username=s' => \$username) or usage(1);
usage(0) if $help;

my $udb = BrownCS::UDB->new;
$udb->start($username);

if (@ARGV < 1) {
  usage(2);
}

my $classname = shift @ARGV;
my @hostnames = @ARGV;

foreach my $hostname (@hostnames) {
  my $comp = $udb->db->resultset('Computers')->find($hostname);
  if (not $comp) {
    vprint("no record for computer $hostname");
    next;
  }

  my $class = $udb->db->resultset('CompClasses')->find_or_create({name => $classname, os => $comp->os});

  if (not $class->computers()->find($hostname)) {
    vprint("adding computer $hostname to class $classname");
    $comp->add_to_classes($class);
  }
}

__END__

=head1 NAME

udb-add-to-class - Add one or more computers to a class

=head1 SYNOPSIS

udb-add-to-class [-u username] <classname> [<hostname> ...]

=head1 DESCRIPTION

adds one or more computers to a class

=head1 OPTIONS

=over

=item B<-h>, B<--help>

Print a help message and exit.

=item B<-u>, B<--username>=user

Logs onto the database server as the specified username, instead of as
the current user.

=back

=head1 AUTHORS

Aleks Bromfield.

=head1 SEE ALSO

B<udb>

=cut

