#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;

use FindBin qw($RealBin);
use lib "$RealBin/../lib";
use BrownCS::udb::Schema;
use BrownCS::udb::Util qw(:all);
use BrownCS::udb::Console qw(:all);

# Print a simple help message.
sub usage {
  my ($exit_status) = @_;
  pod2usage({ -exitval => $exit_status, -verbose => 1});
}

my $help = 0;
my $verbose = 0;
my $dryrun = 0;

sub vprint {
  my ($msg) = @_;
  if ($verbose) {
    print $msg, "\n";
  }
}

GetOptions (
  'help|h|?' => \$help, 
  'v|verbose' => \$verbose,
) or usage(1);
usage(0) if $help;

my $udb = BrownCS::udb::Schema->connect;
my $uc = new BrownCS::udb::Console(udb => $udb);

if (not $dryrun) {
  if (not BrownCS::udb::Util::okay_tstaff){
    print "Insufficient privileges - check your warnings.\n";
    exit;
  }
}

if (@ARGV < 1) {
  usage(2);
}

my $classname = shift @ARGV;
my @hostnames = @ARGV;

foreach my $hostname (@hostnames) {
  my $comp = $udb->resultset('Computers')->find($hostname);
  if (not $comp) {
    print "No record for computer $hostname.\n" if not $comp;
    next;
  }

  if ($comp->device->protected) {
    printf("The device %s is protected!\n", $comp->device_name);
    print "Do not modify or delete this entry unless you know what you're doing.\n";
    if (! $uc->confirm("Are you sure (y/n)?")) {
      next;
    }
  }

  my $class = $udb->resultset('CompClasses')->find_or_create({name => $classname, os_type => $comp->os_type});

  if (not $class->computers()->find($hostname)) {
    vprint("adding computer $hostname to class $classname");
    $comp->add_to_comp_classes($class);
  }
}

__END__

=head1 NAME

udb-add-to-class - Add one or more computers to a class

=head1 SYNOPSIS

udb-add-to-class <classname> [<hostname> ...]

=head1 DESCRIPTION

adds one or more computers to a class

=head1 OPTIONS

=over

=item B<-h>, B<--help>

Print a help message and exit.

=item B<-n>, B<--dryrun>

Don't make any changes; just print what would be done.

=item B<-v>, B<--verbose>

Print lots of text about what is going on.

=back

=head1 AUTHORS

Aleks Bromfield.

=head1 SEE ALSO

B<udb>

=cut

