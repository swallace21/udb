#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;

use FindBin qw($RealBin);
use lib "$RealBin/../lib";
use BrownCS::UDB;
use BrownCS::UDB::Util qw(:all);

# Print a simple help message.
sub usage {
  my ($exit_status) = @_;
  pod2usage({ -exitval => $exit_status, -verbose => 1});
}

my $help = 0;
my $verbose = 0;
my $dryrun = 0;
my $username = $ENV{'USER'};

GetOptions ('help|h|?' => \$help, 
            'v|verbose' => \$verbose,
            'n|dryrun' => \$dryrun,
            'u|username=s' => \$username) or usage(1);
usage(0) if $help;

my $udb = BrownCS::UDB->new;
$udb->start($username);

if (@ARGV != 1) {
  usage(2);
}

my $hostname = shift @ARGV;

if ($udb->is_protected($hostname)) {
  print "This device is protected!\n";
  print "Do not modify or delete this entry unless you know what you're doing.\n";
} else {
  $udb->{dbh}->do(q{delete from equipment where name = ?}, undef, $hostname);
}

END {
  if (defined $udb) {
    $udb->finish;
  }
}

__END__

=head1 NAME

udb-delete - delete a host from UDB

=head1 SYNOPSIS

udb-delete [-u username] hostname

=head1 DESCRIPTION

deletes one or more hosts from the database

=head1 OPTIONS

=over

=item B<-h>, B<--help>

Print a help message and exit.

=item B<-u>, B<--username>=user

Logs onto the database server as the specified username, instead of as
the current user.

=back

=head1 AUTHORS

Aleks Bromfield.

=head1 SEE ALSO

B<udb>

=cut

