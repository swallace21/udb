#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use Data::Dumper;

use FindBin qw($RealBin);
use lib "$RealBin/../lib";
use BrownCS::udb::Schema;
use BrownCS::udb::Util qw(:all);
use BrownCS::udb::Console qw(:all);

# Print a simple help message.
sub usage {
  my ($exit_status) = @_;
  pod2usage({ -exitval => $exit_status, -verbose => 1});
}

my $help = 0;
my $verbose = 0;
my $dryrun = 0;
my $username = $ENV{'USER'};
my $view = 'all';

GetOptions ('help|h|?' => \$help, 
            'v|verbose' => \$verbose,
            'n|dryrun' => \$dryrun,
            'm|view-mode=s' => \$view,
            'u|username=s' => \$username) or usage(1);
usage(0) if $help;

my $udb = BrownCS::udb::Schema->connect;


if (@ARGV != 1) {
  usage(2);
}

my $name = shift @ARGV;

my @candidate_devices = ();

# device with name LIKE what we're looking for
my $device_rs = $udb->resultset('SurplusDevices')->search({
    name => { '~*' => $name },
  });
if ($device_rs) {
  while (my $device = $device_rs->next) {
    push @candidate_devices, $device;
  }
}

my %seen_devices = ();
foreach my $device (@candidate_devices) {
  if (not $seen_devices{$device->name}) {
    $seen_devices{$device->name} = 1;
    print "\n";
    print_record('', format_surplus($device));
  }
}

if (%seen_devices) {
  exit(0);
}

die "Couldn't find anything matching $name.\n";

