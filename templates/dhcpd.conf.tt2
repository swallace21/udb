[%- USE DBI( dbh = dbh ) -%]
#
#  FILE: [% filename %]
# DESCR: DHCP config generated by udb
#  DATE: [% date %]
#

##############################################################################
# DO NOT EDIT [% filename %] BY HAND!
# ALL dhcpd.conf DATA IS GENERATED BY UDB. USE UDB TO MODIFY OR INSERT 
# RECORDS, OR EDIT THE TEMPLATE.
##############################################################################

##
## Global Parameters
##

#
# Default time for a lease (in seconds).  3600 = 1 hours
#
default-lease-time 3600;	

#
# Max time for lease (in seconds).  If a client requests a longer
# lease than usual, let them have it if less than 1 day.
#
max-lease-time 86400;

#
# Our NIS Domain name
#
option nis-domain "cs";

#
# WINS Server information
#	the netbios-name-servers entry points
#	to raisinets, currently for testing with the
#	\\guestprint issue.  nebios-node-type 2
#	means use wins server only
#	patpaul 6-2-06
#
    option netbios-name-servers 128.148.33.125;
    option netbios-node-type 2;

#
# Fully Automated Install (FAI) - debian unattended install options
#
#	option-170 is FAI_LOCATION, target is /usr/local/share/fai
#		- this is the custom portion of the install
option option-170 "dmznfs.cs.brown.edu:/vol/fai/config";
option option-171 "install";
option option-172 "createvt sshd";

#
# For Windows RIS clients
#
#option tftp-server-name "gigan.cs.brown.edu";
#option bootfile-name "startrom.com";
#option dhcp-class-identifier "PXEClient";
#next-server gigan.cs.brown.edu;

#
# For PXELINUX clients
#
allow booting;
allow bootp;

#
# Only allow known clients
#
deny unknown-clients;

#
# Dynamic addresses (subnet 36)
#
subnet 128.148.36.0 netmask 255.255.255.0 {
    option routers 128.148.36.1;
    option domain-name "cs.brown.edu";
    option domain-name-servers 128.148.38.200, 128.148.38.254, 128.148.38.253;
    option ntp-servers 128.148.38.148, 128.148.33.79;
    option broadcast-address 128.148.36.255;


    default-lease-time 3600;	
    max-lease-time 10800;

    range 128.148.36.100 128.148.36.254;
}

#
# subnet 31
#
subnet 128.148.31.0 netmask 255.255.255.0 {
    option routers 128.148.31.1;
    option domain-name "cs.brown.edu";
    option domain-name-servers 128.148.38.200, 128.148.38.254, 128.148.38.253;
    option ntp-servers 128.148.38.148, 128.148.33.79;
    option broadcast-address 128.148.31.255;
    option nis-servers 128.148.31.253, 128.148.31.254;

    default-lease-time 86400;	
    max-lease-time 86400;
}

#
# subnet 32 (tstaff-dmz)
#
subnet 128.148.32.0 netmask 255.255.255.128 {
    option routers 128.148.32.1;
    option domain-name "cs.brown.edu";
    option domain-name-servers 128.148.32.121;
    option ntp-servers 128.148.128.11;
    option broadcast-address 128.148.32.127;

    default-lease-time 86400;	
    max-lease-time 86400;
}

#
# subnet 892 (user-dmz)
#
subnet 128.148.32.128 netmask 255.255.255.128 {
    option routers 128.148.32.129;
    option domain-name "cs.brown.edu";
    option domain-name-servers 128.148.32.121;
    option ntp-servers 128.148.128.11;
    option broadcast-address 128.148.32.255;

    default-lease-time 86400;	
    max-lease-time 86400;
}

#
# subnet 33
#
subnet 128.148.33.0 netmask 255.255.255.0 {
    option routers 128.148.33.1;
    option domain-name "cs.brown.edu";
    option domain-name-servers 128.148.38.200, 128.148.38.254, 128.148.38.253;
    option ntp-servers 128.148.38.148, 128.148.33.79;
    option broadcast-address 128.148.33.255;
    option nis-servers 128.148.33.253, 128.148.33.254;

    default-lease-time 86400;	
    max-lease-time 86400;
}

#
# subnet 37
#
subnet 128.148.37.0 netmask 255.255.255.0 {
    option routers 128.148.37.1;
    option domain-name "cs.brown.edu";
    option domain-name-servers 128.148.38.200, 128.148.38.254, 128.148.38.253;
    option ntp-servers 128.148.38.148, 128.148.33.79;
    option broadcast-address 128.148.37.255;
    option nis-servers 128.148.37.253, 128.148.37.254;

    default-lease-time 86400;	
    max-lease-time 86400;
}

#
# subnet 38
#
subnet 128.148.38.0 netmask 255.255.255.0 {
    option routers 128.148.38.1;
    option domain-name "cs.brown.edu";
    option domain-name-servers 128.148.38.200, 128.148.38.254, 128.148.38.253;
    option ntp-servers 128.148.38.148, 128.148.33.79;
    option broadcast-address 128.148.38.255;
    option nis-servers 128.148.38.253, 128.148.38.254;

    default-lease-time 86400;	
    max-lease-time 86400;
}

#
# subnet declaration for the 10.116 subnet (ilab related machines)
#
subnet 10.116.0.0 netmask 255.255.0.0 {
    option routers 10.116.1.1;
    option domain-name "ilab.cs.brown.edu";
    option domain-name-servers 128.148.38.200, 128.148.38.254, 128.148.38.253; 
    option ntp-servers 128.148.38.148, 128.148.33.79;
    option broadcast-address 10.116.255.255;
    option nis-servers 10.116.1.5, 10.116.1.6;

    default-lease-time 86400;	
    max-lease-time 86400;
}

#
# subnet declaration for the 192.168.10 subnet (switch infrastructure)
#
subnet 192.168.10.0 netmask 255.255.255.0 {
    option routers 192.168.10.1;
    option domain-name "cs.brown.edu";
    option domain-name-servers 128.148.38.200, 128.148.38.253, 128.148.38.254; 
    option ntp-servers 128.148.38.148, 128.148.33.79;
    option broadcast-address 192.168.10.255;
    option nis-servers 128.148.38.253, 128.148.38.254;

    default-lease-time 86400;	
    max-lease-time 86400;
}

#
# Statically assigned addresses
#

#
# PXElinux Clients
#
group {
    use-host-decl-names on;
    next-server pxe.cs.brown.edu;
    filename "pxelinux.0";

[% FOREACH host IN DBI.query('select ni.ethernet, na.ipaddr, c.hw_arch, c.os, c.pxelink, fqdn_brown(nde.dns_name, nde.domain) as hostname from net_addresses na, net_interfaces ni, net_addresses_net_interfaces nani, computers c, os_types o, net_dns_entries nde where ni.equip_name = c.name and nani.net_addresses_id = na.id and nani.net_interfaces_id = ni.id and ni.primary_address = na.id and ni.ethernet is not null and na.ipaddr is not null and na.enabled and c.os = o.name and o.pxe_boot and nde.authoritative and nde.address = na.id') -%]
    host [% host.hostname %] {
        hardware ethernet [% host.ethernet %];
        fixed-address [% host.ipaddr %]
    }
[% END -%]

}

#
# Other Static DHCP Clients
#
group {
    use-host-decl-names on;

[% FOREACH host IN DBI.query('select ni.ethernet, na.ipaddr, c.hw_arch, c.os, c.pxelink, fqdn_brown(nde.dns_name, nde.domain) as hostname from net_addresses na, net_interfaces ni, net_addresses_net_interfaces nani, computers c, os_types o, net_dns_entries nde where ni.equip_name = c.name and nani.net_addresses_id = na.id and nani.net_interfaces_id = ni.id and ni.primary_address = na.id and ni.ethernet is not null and na.ipaddr is not null and na.enabled and c.os = o.name and not o.pxe_boot and nde.authoritative and nde.address = na.id') -%]
    host [% host.hostname %] {
        hardware ethernet [% host.ethernet %];
        fixed-address [% host.ipaddr %]
    }
[% END -%]
}

#
# Dynamic DHCP Clients
#
group {
    use-host-decl-names on;

[% FOREACH host IN DBI.query('select ni.ethernet, na.ipaddr, c.hw_arch, c.pxelink, fqdn_brown(nde.dns_name, nde.domain) as hostname from net_addresses na, net_interfaces ni, net_addresses_net_interfaces nani, computers c, net_zones nz, net_dns_entries nde where ni.equip_name = c.name and nani.net_addresses_id = na.id and nani.net_interfaces_id = ni.id and ni.primary_address = na.id and ni.ethernet is not null and na.ipaddr is null and na.enabled and nz.name = na.zone and nz.dynamic_dhcp and nde.authoritative and nde.address = na.id') -%]
    host [% host.hostname %] {
        hardware ethernet [% host.ethernet %];
    }
[% END -%]

}

# EOF
