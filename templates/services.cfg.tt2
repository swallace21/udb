[%- USE DBI( dbh = dbh ) -%]
#
#  FILE: [% filename %]
# DESCR: nagios services.cfg generated by udb
#  DATE: [% date %]    (date generated)
#

################################################################################
# SERVICE DEFINITIONS
#
###############################################################################

# Default Service Template
define service{ 
  name service_template
  active_checks_enabled 1 
  passive_checks_enabled 1 
  parallelize_check 1 
  obsess_over_service 1
  check_freshness 1 
  notifications_enabled 1 
  event_handler_enabled 1
  flap_detection_enabled 1
  process_perf_data 0 
  retain_status_information 1
  retain_nonstatus_information 1
  is_volatile 0
  check_period 24x7
  max_check_attempts 3
  normal_check_interval 5
  retry_check_interval 1
  contact_groups default_group
  notification_interval 1440
  notification_period 24x7
  notification_options w,u,c,r,f
  check_command check_ping!3000,40%!5000,100%
  register 0
}

# generic ping service
define service{ 
  name ping_template
  use service_template
  service_description PING
  check_command check_ping!3000,40%!5000,100%
  register 0
}

#
# Specific service checks
#

# FTP services
define service{
  name ftp_template 
  use service_template
  service_description FTP
  check_command check-ftp
  register 0
}

define service{
  name printer_template
  use service_template
  service_description PRINT
  check_command check-hpjd
  notification_interval 1440
  notification_period 24x7
  notification_options w,u,c
  register 0
}

# CIFS service check
define service{
  name smb_template 
  use service_template
  service_description CIFS
  check_command check-smb
  register 0
}

define service{
  name smtp_template
  use service_template
  service_description SMTP
  check_command check-smtp
  register 0
}

define service{
  name http_template
  use service_template
  service_description HTTP
  check_command check-http
  register 0
}

define service{
  name imap_template 
  use service_template
  service_description IMAP
  check_command check-simap
  register 0
}

define service{
  name pop_template 
  use service_template
  service_description POP3
  check_command check-spop
  register 0
}

define service{
  name dns_template
  use service_template
  service_description DNS
  check_command check-dns
  register 0
}

define service{
  name dns_internal_template
  use service_template
  service_description DNS_INT
  check_command check_internal_dns
  register 0
}

define service{
  name dhcp_template
  use service_template
  service_description DHCP
  check_command check-dhcp
  register 0
}
 
define service{
  name telnet_template
  use service_template
  service_description TELNET
  check_command check-telnet
  register 0
}
 
define service{
  name liebert_template
  use service_template
  service_description LIEBERT
  check_command check_liebert
  register 0
}

define service{
  name liebert_alarms_template
  use service_template
  service_description LIEBERT_ALARM
  check_command check_liebert_alarms
  register 0
}

define service{
  name nis_template
  use service_template
  service_description NIS
  check_command check_nis
  register 0
}

define service{
  name thermo_template
  use service_template
  service_description THERMO
  check_command check_thermo
  register 0
}

define service{
  name alternate_thermo_template
  use service_template
  service_description THERMO
  check_command alternate_check_thermo
  register 0
}

define service{
  name tapes_template
  use service_template
  service_description TAPES
  check_command check-tapes
  register 0
}
 
define service{
  name pgsql_template
  use service_template
  service_description PGSQL
  check_command check-pgsql!-d template1
  notification_interval 120
  register 0
}

define service{
  name pgsql_csblog_template
  use service_template
  service_description PGSQL_CSBLOG
  check_command check-pgsql!-d csblog
  notification_interval 120
  register 0
}

define service{
  name pgsql_csweb_template
  use service_template
  service_description PGSQL_CSWEB
  check_command check-pgsql!-d csweb
  notification_interval 120
  register 0
}

define service{
  name pgsql_rt_template
  use service_template
  service_description PGSQL_RT
  check_command check-pgsql!-d rt4
  notification_interval 120
  register 0
}

define service{
  name pgsql_udb_template
  use service_template
  service_description PGSQL_UDB
  check_command check-pgsql!-d udb
  notification_interval 120
  register 0
}

define service{
  name mysql_template
  use service_template
  service_description MYSQL
  check_command check-mysql!-d mysql
  notification_interval 120
  register 0
}

define service{
  name mysql_owncloud_template
  use service_template
  service_description MYSQL_OWNCLOUD
  check_command check-mysql!-d owncloud
  notification_interval 120
  register 0
}

define service{
  name pgproxy_template
  use service_template
  service_description PGPROXY
  check_command check-pg-proxy!-w 10
  notification_interval 120
  register 0
}

define service{
  name netapp_template
  use service_template
  service_description NETAPP
  check_command check_netapp
  register 0
}

define service{
  name ntp_template
  use service_template
  service_description NTP
  check_command check-ntp
  register 0
}

define service{
  name ssh_template
  use service_template
  service_description SSH
  check_command check-ssh
  register 0
}

define service{
  name spamd_template
  use service_template
  service_description SPAMD
  check_command check-spamd
  register 0
}

define service{
  name ypbind_template
  use service_template
  service_description YPBIND
  check_command check-ypbind
  register 0
}

define service{
  name diskusage_template
  use service_template
  register 0
}

define service{
  name queuing_template
  use service_template
  service_description print queue
  register 0
}

define service{ 
   name crm_ldap_template
   use service_template 
   service_description CRM_LDAP 
   check_command check-crm-ldap
   register 0 
}

define service{
  name ldap_template
  use service_template
  service_description LDAP
  check_command check-ldap
  register 0
}

define service{
  name ldaps_template
  use service_template
  service_description LDAPS
  check_command check-ldap!-S!-P 636
  register 0
}

define service{
  name ldapmaster_template
  use service_template
  service_description LDAPMASTER
  check_command check-ldap!-P 3890
  register 0
}

define service{
  name ldapsmaster_template
  use service_template
  service_description LDAPSMASTER
  check_command check-ldap!-S!-P 6360
  register 0
}

define service{
  name krb_template
  use service_template
  service_description KRB
  check_command check-kdc
  register 0
}

define service{
 name sge_template
 use service_template
 service_description SGE
 check_command check-sge
 register 0
}

define service{
  name drbd_template
  use service_template
  service_description DRBD
  check_command check-drbd
  register 0
}

define service{
  name mailq_template
  use service_template
  service_description MAILQ
  check_command check-mailq
  register 0
}

define service{
  name gpfs_template
  use service_template
  service_description GPFS
  check_command check-gpfs
  register 0
}

define service{
  name gpfs_fs_template
  use service_template
  service_description GPFS_FS
  check_command check-gpfs-fs
  register 0
}

define service{
  name gpfs_quota_template
  use service_template
  service_description GPFS_QUOTAS
  check_command check-gpfs-quotas
  register 0
}

define service{
   name pacemaker_template
   use service_template
   service_description PACEMAKER
   check_command check-pacemaker
   register 0
}

[% FOREACH servicegroup IN DBI.query("select ns.net_service,ns.description from net_services ns") -%]
define servicegroup {
  servicegroup_name [% servicegroup.net_service %]
  alias [% servicegroup.description %]
}

[% END -%]

[% FOREACH host IN DBI.query("select na.ipaddr, fqdn_brown(nde.dns_name, nde.domain) as hostname, ns.net_service from net_addresses na, net_services ns, net_addresses_net_services nans, net_dns_entries nde where nans.net_address_id = na.net_address_id and nans.net_service = ns.net_service and na.monitored and na.enabled and nde.authoritative and nde.net_address_id = na.net_address_id order by ns.net_service, hostname") -%]
[% SWITCH host.net_service %]
[%  CASE 'ftp' %]
define service{
  use             ftp_template
  host_name       [% host.hostname %]
  servicegroups   ftp
}

[% CASE 'gpfs' %]
define service{
  use             gpfs_template
  host_name       [% host.hostname %]
  servicegroups   gpfs
  contact_groups  emergency_group
}

define service{
  use             gpfs_fs_template
  host_name       [% host.hostname %]
  servicegroups   gpfs
  contact_groups  urgent_group
}

define service{
  use             gpfs_quota_template
  host_name       [% host.hostname %]
  servicegroups   gpfs
  contact_groups  escalation_group
}
[% CASE 'smb' %]
define service{
  use             smb_template
  host_name       [% host.hostname %]
  servicegroups   smb
  contact_groups  urgent_group
}
[%  CASE 'printer' %]
define service{
  use             printer_template
  host_name       [% host.hostname %]
  servicegroups   printer
}

define service{
  use             queuing_template
  host_name       [% host.hostname %]
  check_command   check-queuing![% host.hostname %]
  servicegroups   printer
}
[%  CASE 'smtp' %]
define service{
  use             smtp_template
  host_name       [% host.hostname %]
  servicegroups   smtp
  contact_groups  urgent_group
}

define service{
  use             mailq_template
  host_name       [% host.hostname %]
  servicegroups   smtp
  contact_groups  urgent_group
}
[%  CASE 'http' %]
define service{
  use             http_template
  host_name       [% host.hostname %]
  servicegroups   http
  contact_groups  urgent_group
}
[%  CASE 'imap' %]
define service{
  use             imap_template
  host_name       [% host.hostname %]
  servicegroups   imap
  contact_groups  urgent_group
}

define service{
  use             pop_template
  host_name       [% host.hostname %]
  servicegroups   imap
}
[%  CASE 'dns' %]
define service{
  use             dns_template
  host_name       [% host.hostname %]
  servicegroups   dns
}

define service{
  use             dns_internal_template
  host_name       [% host.hostname %]
  servicegroups   dns
}
[%  CASE 'dhcp' %]
define service{
  use             dhcp_template
  host_name       [% host.hostname %]
  servicegroups   dhcp
  contact_groups  urgent_group
}
[%  CASE 'telnet' %]
define service{
  use             telnet_template
  host_name       [% host.hostname %]
  servicegroups   telnet
}
[%  CASE 'liebert' %]
define service{
  use             liebert_template
  host_name       [% host.hostname %]
  servicegroups   liebert
  contact_groups  spoc_group,default_group
}

define service{
  use             liebert_alarms_template
  host_name       [% host.hostname %]
  servicegroups   liebert
  contact_groups  spoc_group,default_group
}

[%  CASE 'thermo' %]
define service{
  use             thermo_template
  host_name       [% host.hostname %]
  servicegroups   thermo
  contact_groups  emergency_group
}

define service{
  use             alternate_thermo_template
  host_name       [% host.hostname %]
  servicegroups   thermo
  contact_groups  emergency_group
}

[%  CASE 'pgsql' %]
define service{
  use             pgsql_template
  host_name       [% host.hostname %]
  servicegroups   pgsql
  contact_groups  urgent_group
}

[%  CASE 'pgsql_sysdb' %]
define service{
  use             pgsql_csblog_template
  host_name       [% host.hostname %]
  servicegroups   pgsql
  contact_groups  urgent_group
}

define service{
  use             pgsql_csweb_template
  host_name       [% host.hostname %]
  servicegroups   pgsql
  contact_groups  urgent_group
}

define service{
  use             pgsql_rt_template
  host_name       [% host.hostname %]
  servicegroups   pgsql
  contact_groups  urgent_group
}

define service{
  use             pgsql_udb_template
  host_name       [% host.hostname %]
  servicegroups   pgsql
  contact_groups  urgent_group
}

[%  CASE 'pgproxy' %]
define service{
  use             pgproxy_template
  host_name       [% host.hostname %]
  servicegroups   pgsql
  contact_groups  urgent_group
}

[%  CASE 'mysql' %]
define service{
  use             mysql_template
  host_name       [% host.hostname %]
  servicegroups   mysql
  contact_groups  urgent_group
}

[%  CASE 'mysql_sysdb' %]
define service{
  use             mysql_owncloud_template
  host_name       [% host.hostname %]
  servicegroups   mysql
  contact_groups  urgent_group
}

[%  CASE 'netapp' %]
define service{
  use             netapp_template
  host_name       [% host.hostname %]
  servicegroups   netapp
}
[%  CASE 'ntp' %]
define service{
  use             ntp_template
  host_name       [% host.hostname %]
  servicegroups   ntp
}
[%  CASE 'ssh' %]
define service{
  use             ssh_template
  host_name       [% host.hostname %]
  servicegroups   ssh
}
[%  CASE 'sge' %]
define service{
  use             sge_template
  host_name       [% host.hostname %]
  servicegroups   sge
}
[%  CASE 'ldap' %]
define service{
  use             ldap_template
  host_name       [% host.hostname %]
  servicegroups   ldap
  contact_groups  urgent_group
}
define service{
  use             ldaps_template
  host_name       [% host.hostname %]
  servicegroups   ldap
  contact_groups  urgent_group
}
[%  CASE 'ldapmaster' %]
define service{
  use             ldapmaster_template
  host_name       [% host.hostname %]
  servicegroups   ldap
  contact_groups  emergency_group
}
define service{
  use             ldapsmaster_template
  host_name       [% host.hostname %]
  servicegroups   ldap
  contact_groups  emergency_group
}
[%  CASE 'ldapslave' %]
define service{
  use             crm_ldap_template
  host_name       [% host.hostname %]
  servicegroups   ldap
  contact_groups  urgent_group
}

[%  CASE 'pacemaker' %]
define service{
  use             pacemaker_template
  host_name       [% host.hostname %]
  servicegroups   pacemaker
  contact_groups  urgent_group
}

[%  CASE 'drbd' %]
define service{
  use             drbd_template
  host_name       [% host.hostname %]
  servicegroups   drbd
}
[%  CASE 'krb' %]
define service{
  use             krb_template
  host_name       [% host.hostname %]
  servicegroups   krb
  contact_groups  urgent_group
}

[% END -%]
[% END -%]

# EOF
